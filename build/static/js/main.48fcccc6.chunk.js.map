{"version":3,"sources":["reportWebVitals.ts","utils/formatter.ts","components/Modal.tsx","pages/Map.tsx","containers/Layout.tsx","index.tsx"],"names":["reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","numberWithCommas","x","toString","replace","Modal","open","title","content","buttons","onClose","React","useState","isOpen","setIsOpen","useEffect","ReactDOM","createPortal","appear","show","as","Fragment","className","Overlay","Child","enter","enterFrom","enterTo","leave","leaveFrom","leaveTo","aria-hidden","Title","map","v","type","color","backgroundColor","split","onClick","text","document","body","mapboxgl","accessToken","todayDate","options","id","columnName","share","legendTotal","legendShare","MapPage","useRef","mapContainer","loadingMap","setLoadingMap","moment","format","currentDate","setCurrentDate","diff","diffDate","chartData","setChartData","modalContent","setModalContent","add","toDate","predictDate","setPredictDate","predictData","setPredictData","lng","setLng","lat","setLat","zoom","setZoom","selectedOptions","setSelectedOption","selectedOptionsRef","current","state","setState","mapLoaded","setMapLoaded","Map","container","style","center","a","undefined","axios","get","stateName","res1","res2","res3","res4","totalPeopleVaccinated","data","sharePeopleVaccinated","totalPeopleFullyVaccinated","sharePeopleFullyVaccinated","res","on","getCenter","getZoom","getSource","setData","setPaintProperty","property","stops","isStyleLoaded","addSource","addLayer","source","layout","paint","e","states","queryRenderedFeatures","point","layers","getCanvas","cursor","length","name","features","properties","STATE_NAME","totalVaccination","stateId","size","autoFocus","customInput","selected","onChange","date","minDate","labels","datasets","label","fill","borderColor","scales","yAxes","ticks","beginAtZero","opacity","ref","step","defaultValue","min","max","Button","Panel","Layout","children","href","target","rel","contextClass","success","error","info","warning","default","dark","App","exact","path","component","to","transition","Slide","autoClose","position","hideProgressBar","toastClassName","prop","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.48fcccc6.chunk.js","sourcesContent":["import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","export const numberWithCommas = (x: string) => {\r\n  return x.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \",\");\r\n};\r\n","import { Dialog, Transition } from \"@headlessui/react\";\r\nimport React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nexport const Modal = ({\r\n  open,\r\n  title,\r\n  content,\r\n  buttons,\r\n  onClose,\r\n}: {\r\n  open: boolean;\r\n  title: string;\r\n  content: JSX.Element | JSX.Element[] | string | string[];\r\n  onClose?: () => void;\r\n  buttons: {\r\n    text: string;\r\n    color?: string;\r\n    backgroundColor?: string;\r\n    onClick?: () => void;\r\n  }[];\r\n}) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    setIsOpen(open);\r\n  }, [open]);\r\n\r\n  const renderModal = () => {\r\n    return (\r\n      <>\r\n        <Transition appear show={isOpen} as={React.Fragment}>\r\n          <Dialog\r\n            as=\"div\"\r\n            className=\"fixed inset-0 z-50 overflow-y-auto\"\r\n            onClose={() => {\r\n              if (onClose) {\r\n                onClose();\r\n              }\r\n              setIsOpen(false);\r\n            }}\r\n          >\r\n            <Dialog.Overlay className=\"fixed inset-0 bg-black opacity-30\" />\r\n            <div className=\"min-h-screen px-4 text-center\">\r\n              <Transition.Child\r\n                as={React.Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0\"\r\n                enterTo=\"opacity-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100\"\r\n                leaveTo=\"opacity-0\"\r\n              >\r\n                <Dialog.Overlay className=\"fixed inset-0\" />\r\n              </Transition.Child>\r\n\r\n              {/* This element is to trick the browser into centering the modal contents. */}\r\n              <span\r\n                className=\"inline-block h-screen align-middle\"\r\n                aria-hidden=\"true\"\r\n              >\r\n                &#8203;\r\n              </span>\r\n              <Transition.Child\r\n                as={React.Fragment}\r\n                enter=\"ease-out duration-300\"\r\n                enterFrom=\"opacity-0 scale-95\"\r\n                enterTo=\"opacity-100 scale-100\"\r\n                leave=\"ease-in duration-200\"\r\n                leaveFrom=\"opacity-100 scale-100\"\r\n                leaveTo=\"opacity-0 scale-95\"\r\n              >\r\n                <div className=\"inline-block w-full max-w-4xl p-6 my-8 overflow-hidden text-left align-middle transition-all transform bg-white shadow-xl rounded-2xl\">\r\n                  <Dialog.Title\r\n                    as=\"h3\"\r\n                    className=\"text-lg font-medium leading-6 text-gray-900\"\r\n                  >\r\n                    {title}\r\n                  </Dialog.Title>\r\n                  <div className=\"mt-2\">{content}</div>\r\n\r\n                  <div className=\"mt-4\">\r\n                    {buttons.map((v) => (\r\n                      <button\r\n                        type=\"button\"\r\n                        className={`inline-flex justify-center px-4 py-2 text-sm font-medium ${\r\n                          v.color ? v.color : \"text-blue-900\"\r\n                        } ${\r\n                          v.backgroundColor ? v.backgroundColor : \"bg-blue-100\"\r\n                        } border border-transparent rounded-md hover:bg-${\r\n                          v.backgroundColor?.split(\"-\")[1] || \"blue\"\r\n                        }-200 focus:outline-none`}\r\n                        onClick={() => {\r\n                          if (v.onClick) {\r\n                            v.onClick();\r\n                          } else if (onClose) {\r\n                            onClose();\r\n                          }\r\n                          setIsOpen(false);\r\n                        }}\r\n                      >\r\n                        {v.text}\r\n                      </button>\r\n                    ))}\r\n                  </div>\r\n                </div>\r\n              </Transition.Child>\r\n            </div>\r\n          </Dialog>\r\n        </Transition>\r\n      </>\r\n    );\r\n  };\r\n\r\n  return ReactDOM.createPortal(renderModal(), document.body);\r\n};\r\n","/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React from \"react\";\r\nimport mapboxgl from \"mapbox-gl\"; // eslint-disable-line import/no-webpack-loader-syntax\r\nimport Slider from \"rc-slider\";\r\nimport moment from \"moment\";\r\nimport { numberWithCommas } from \"../utils/formatter\";\r\nimport { Modal } from \"../components/Modal\";\r\nimport { Popover, Transition } from \"@headlessui/react\";\r\nimport { Line } from \"react-chartjs-2\";\r\nimport axios from \"axios\";\r\nimport DatePicker from \"react-datepicker\";\r\nimport HashLoader from \"react-spinners/ClipLoader\";\r\n\r\nmapboxgl.accessToken =\r\n  \"pk.eyJ1IjoicHJhZGlwdGFrcCIsImEiOiJja3Bqc3liamswNjNoMnZwYmN0bzJxdjA2In0.Mjs-GkGZMsu8owYX_utitQ\";\r\n\r\nconst todayDate = \"2021-07-01\";\r\n\r\ntype optionType = {\r\n  title: string;\r\n  share?: boolean;\r\n  columnName: string;\r\n  id:\r\n    | \"total-people-vaccinated\"\r\n    | \"share-people-vaccinated\"\r\n    | \"total-people-fully-vaccinated\"\r\n    | \"share-people-fully-vaccinated\";\r\n};\r\n\r\nconst options: optionType[] = [\r\n  {\r\n    title: \"Total People Vaccinated (1 Dose)\",\r\n    id: \"total-people-vaccinated\",\r\n    columnName: \"people_vaccinated\",\r\n  },\r\n  {\r\n    title: \"Share People Vaccinated (1 Dose)\",\r\n    id: \"share-people-vaccinated\",\r\n    columnName: \"people_vaccinated_per_hundred\",\r\n    share: true,\r\n  },\r\n  {\r\n    title: \"Total People Fully Vaccinated\",\r\n    id: \"total-people-fully-vaccinated\",\r\n    columnName: \"people_fully_vaccinated\",\r\n  },\r\n  {\r\n    title: \"Share People Fully Vaccinated\",\r\n    id: \"share-people-fully-vaccinated\",\r\n    columnName: \"people_fully_vaccinated_per_hundred\",\r\n    share: true,\r\n  },\r\n];\r\n\r\nconst legendTotal: [number, string][] = [\r\n  [0, \"#FFF\"],\r\n  [500000, \"#DEEBF7\"],\r\n  [1000000, \"#C6DBEF\"],\r\n  [2500000, \"#9ECAE1\"],\r\n  [5000000, \"#6BAED6\"],\r\n  [8000000, \"#4292C6\"],\r\n  [10000000, \"#2171B5\"],\r\n  [20000000, \"#08519C\"],\r\n  [40000000, \"#08306B\"],\r\n];\r\n\r\nconst legendShare: [number, string][] = [\r\n  [0, \"#FFF\"],\r\n  [2, \"#DEEBF7\"],\r\n  [5, \"#C6DBEF\"],\r\n  [10, \"#9ECAE1\"],\r\n  [20, \"#6BAED6\"],\r\n  [30, \"#4292C6\"],\r\n  [40, \"#2171B5\"],\r\n  [50, \"#08519C\"],\r\n  [70, \"#08306B\"],\r\n];\r\n\r\nexport const MapPage = () => {\r\n  const map = React.useRef<mapboxgl.Map>();\r\n  const mapContainer = React.useRef<HTMLDivElement>(null);\r\n  const [loadingMap, setLoadingMap] = React.useState(true);\r\n  const [currentDate, setCurrentDate] = React.useState(\r\n    moment(todayDate).format(\"YYYY-MM-DD\")\r\n  );\r\n  const [diffDate] = React.useState(\r\n    moment(\"2021-01-13\").diff(moment(todayDate), \"days\")\r\n  );\r\n\r\n  const [chartData, setChartData] = React.useState<{\r\n    totalPeopleVaccinated: any[][];\r\n    sharePeopleVaccinated: any[][];\r\n    totalPeopleFullyVaccinated: any[][];\r\n    sharePeopleFullyVaccinated: any[][];\r\n  }>();\r\n\r\n  const [modalContent, setModalContent] =\r\n    React.useState<{ stateName: string; stateId: string }>();\r\n\r\n  const [predictDate, setPredictDate] = React.useState<Date>(\r\n    moment(todayDate).add(1, \"days\").toDate()\r\n  );\r\n\r\n  const [predictData, setPredictData] = React.useState<{\r\n    date: string;\r\n    predict: number;\r\n    state: string;\r\n    \"total population\": number;\r\n    \"total vaccine\": string;\r\n  }>();\r\n\r\n  const [lng, setLng] = React.useState(-100);\r\n  const [lat, setLat] = React.useState(35);\r\n  const [zoom, setZoom] = React.useState(4);\r\n  const [selectedOptions, setSelectedOption] = React.useState<optionType>({\r\n    title: \"Total People Vaccinated (1 Dose)\",\r\n    id: \"total-people-vaccinated\",\r\n    columnName: \"people_vaccinated\",\r\n  });\r\n\r\n  const selectedOptionsRef = React.useRef<optionType>();\r\n\r\n  selectedOptionsRef.current = selectedOptions;\r\n  const [state, setState] =\r\n    React.useState<{ name: string; totalVaccination: number }>();\r\n\r\n  const [mapLoaded, setMapLoaded] = React.useState(false);\r\n\r\n  React.useEffect(() => {\r\n    if (map.current) return; // initialize map only once\r\n\r\n    if (mapContainer.current) {\r\n      map.current = new mapboxgl.Map({\r\n        container: mapContainer.current,\r\n        style: \"mapbox://styles/mapbox/light-v10\",\r\n        center: [lng, lat],\r\n        zoom: zoom,\r\n      });\r\n    }\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (!modalContent) {\r\n      setChartData(undefined);\r\n      return;\r\n    }\r\n    (async () => {\r\n      if (modalContent) {\r\n        setChartData(undefined);\r\n        const res1 = await axios.get<any[][]>(\r\n          `http://localhost:5000/total-people-vaccinated-in-state/${modalContent.stateName}`\r\n        );\r\n        const res2 = await axios.get<any[][]>(\r\n          `http://localhost:5000/share-people-vaccinated-in-state/${modalContent.stateName}`\r\n        );\r\n        const res3 = await axios.get<any[][]>(\r\n          `http://localhost:5000/total-people-fully-vaccinated-in-state/${modalContent.stateName}`\r\n        );\r\n        const res4 = await axios.get<any[][]>(\r\n          `http://localhost:5000/share-people-fully-vaccinated-in-state/${modalContent.stateName}`\r\n        );\r\n\r\n        setChartData({\r\n          totalPeopleVaccinated: res1.data,\r\n          sharePeopleVaccinated: res2.data,\r\n          totalPeopleFullyVaccinated: res3.data,\r\n          sharePeopleFullyVaccinated: res4.data,\r\n        });\r\n      }\r\n    })();\r\n  }, [modalContent]);\r\n\r\n  React.useEffect(() => {\r\n    if (!predictDate) {\r\n      setPredictData(undefined);\r\n      return;\r\n    }\r\n    (async () => {\r\n      setPredictData(undefined);\r\n      if (predictDate && modalContent) {\r\n        const res = await axios.get<any>(\r\n          `http://localhost:5000/predict-vaccine-total-next-date/${modalContent.stateName}/${currentDate}`\r\n        );\r\n\r\n        setPredictData(res.data);\r\n      }\r\n    })();\r\n  }, [predictDate, modalContent]);\r\n\r\n  React.useEffect(() => {\r\n    if (!map.current) {\r\n      return;\r\n    } // wait for map to initialize\r\n\r\n    map.current.on(\"move\", () => {\r\n      if (map.current) {\r\n        setLng(map.current.getCenter().lng);\r\n        setLat(map.current.getCenter().lat);\r\n        setZoom(map.current.getZoom());\r\n      }\r\n    });\r\n  });\r\n\r\n  React.useEffect(() => {\r\n    if (currentDate && map.current && mapLoaded) {\r\n      setLoadingMap(true);\r\n\r\n      //@ts-ignore\r\n      (map.current.getSource(\"state\") as any).setData(\r\n        `http://127.0.0.1:5000/${selectedOptions.id}/${currentDate}`\r\n      );\r\n      setLoadingMap(false);\r\n    }\r\n  }, [currentDate, selectedOptions]);\r\n\r\n  React.useEffect(() => {\r\n    if (!map.current) {\r\n      return;\r\n    } // wait for map to initialize\r\n\r\n    if (mapLoaded) {\r\n      map.current.setPaintProperty(\"state\", \"fill-color\", {\r\n        property: selectedOptionsRef.current?.columnName,\r\n        stops: selectedOptionsRef.current?.share ? legendShare : legendTotal,\r\n      });\r\n    }\r\n\r\n    map.current.on(\"load\", () => {\r\n      if (map.current && map.current.isStyleLoaded()) {\r\n        map.current.addSource(\"state\", {\r\n          type: \"geojson\",\r\n          data: `http://127.0.0.1:5000/${selectedOptionsRef.current?.id}/${currentDate}`,\r\n        });\r\n\r\n        // Add a new layer to visualize the polygon.\r\n        map.current.addLayer({\r\n          id: \"state\",\r\n          type: \"fill\",\r\n          source: \"state\", // reference the data source\r\n          layout: {},\r\n          paint: {\r\n            \"fill-color\": {\r\n              property: selectedOptionsRef.current?.columnName,\r\n              stops: selectedOptionsRef.current?.share\r\n                ? legendShare\r\n                : legendTotal,\r\n            },\r\n            \"fill-opacity\": 0.5,\r\n          },\r\n        });\r\n\r\n        map.current.on(\"mousemove\", \"state\", function (e) {\r\n          // Change the cursor style as a UI indicator.\r\n          if (map.current) {\r\n            var states = map.current.queryRenderedFeatures(e.point, {\r\n              layers: [\"state\"],\r\n            });\r\n            map.current.getCanvas().style.cursor = \"pointer\";\r\n            if (states.length > 0) {\r\n              setState({\r\n                name: (e as any).features[0].properties.STATE_NAME,\r\n                totalVaccination: (e as any).features[0].properties[\r\n                  selectedOptionsRef.current?.columnName ?? \"\"\r\n                ],\r\n              });\r\n            }\r\n          }\r\n        });\r\n\r\n        map.current.on(\"mouseleave\", \"state\", function () {\r\n          setState(undefined);\r\n        });\r\n\r\n        setMapLoaded(true);\r\n        setLoadingMap(false);\r\n\r\n        map.current.on(\"click\", \"state\", function (e) {\r\n          if (map.current) {\r\n            setModalContent({\r\n              stateName: (e as any).features[0].properties.STATE_NAME as string,\r\n              stateId: (e as any).features[0].properties[\r\n                selectedOptionsRef.current?.columnName ?? \"\"\r\n              ],\r\n            });\r\n          }\r\n        });\r\n      }\r\n    });\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [currentDate, selectedOptions]);\r\n\r\n  return (\r\n    <div className=\"w-screen h-screen flex flex-col\">\r\n      {loadingMap ? (\r\n        <div className=\"absolute top-2 inset-x-0 flex justify-center z-50\">\r\n          <div className=\"p-2 bg-white rounded shadow flex items-center\">\r\n            <HashLoader color=\"rgb(30, 64, 175)\" size={16} />\r\n            <div className=\"ml-4 text-blueGray-600\">Loading</div>\r\n          </div>\r\n        </div>\r\n      ) : null}\r\n      <Modal\r\n        open={modalContent ? true : false}\r\n        title={modalContent?.stateName ?? \"\"}\r\n        content={\r\n          <div>\r\n            <div className=\"mb-16\">\r\n              <div className=\"text-md font-medium leading-6 text-gray-900 mb-4\">\r\n                Predict Total of People Fully Vaccinated\r\n              </div>\r\n              <DatePicker\r\n                autoFocus={false}\r\n                customInput={\r\n                  <div className=\"inline-flex justify-center px-4 py-2 text-sm font-medium text-blue-900 bg-blue-100 border border-transparent rounded-md hover:bg-blue-200 focus:outline-none cursor-pointer\">\r\n                    {moment(predictDate).format(\"DD MMMM YYYY\")}\r\n                  </div>\r\n                }\r\n                selected={predictDate}\r\n                onChange={(date) => setPredictDate(date as Date)}\r\n                minDate={moment(todayDate).add(1, \"days\").toDate()}\r\n              />\r\n\r\n              {predictData ? (\r\n                <div className=\"p-6 bg-blue-50 rounded-md mt-2\">\r\n                  <div className=\"flex\">\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-xs text-blueGray-600 font-medium\">\r\n                        Predicted Number of People Fully Vaccinated\r\n                      </div>\r\n                      <div>\r\n                        {numberWithCommas(predictData[\"predict\"].toString())}\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"flex-1\">\r\n                      <div className=\"text-xs text-blueGray-600 font-medium\">\r\n                        Compared to Population\r\n                      </div>\r\n                      <div>\r\n                        {numberWithCommas(\r\n                          predictData[\"total vaccine\"].toString()\r\n                        )}{\" \"}\r\n                        (Out of{\" \"}\r\n                        {numberWithCommas(\r\n                          predictData[\"total population\"].toString()\r\n                        )}\r\n                        )\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                <div className=\"h-10 flex justify-center items-center\">\r\n                  <HashLoader color=\"rgb(30, 64, 175)\" size={12} />\r\n                </div>\r\n              )}\r\n            </div>\r\n\r\n            {chartData ? (\r\n              <>\r\n                <div className=\"flex space-x-8 mb-12\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"text-md font-medium leading-6 text-gray-900 mb-4\">\r\n                      Total People Vaccinated (1 Dose)\r\n                    </div>\r\n\r\n                    <Line\r\n                      data={{\r\n                        labels: chartData?.totalPeopleVaccinated.map(\r\n                          (v) => v[1]\r\n                        ),\r\n                        datasets: [\r\n                          {\r\n                            label: \"Total People Vaccinated (1 Dose)\",\r\n                            data: chartData?.totalPeopleVaccinated.map(\r\n                              (v) => v[2]\r\n                            ),\r\n                            fill: false,\r\n                            backgroundColor: \"#2171B5\",\r\n                            borderColor: \"#2171B5\",\r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                beginAtZero: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      }}\r\n                      type=\"line\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"text-md font-medium leading-6 text-gray-900 mb-4\">\r\n                      Share People Vaccinated in % (1 Dose)\r\n                    </div>\r\n                    <Line\r\n                      data={{\r\n                        labels: chartData?.sharePeopleVaccinated.map(\r\n                          (v) => v[1]\r\n                        ),\r\n                        datasets: [\r\n                          {\r\n                            label:\r\n                              \"Share People Vaccinated In Percent (1 Dose)\",\r\n                            data: chartData?.sharePeopleVaccinated.map(\r\n                              (v) => v[2]\r\n                            ),\r\n                            fill: false,\r\n                            backgroundColor: \"#2171B5\",\r\n                            borderColor: \"#2171B5\",\r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                beginAtZero: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      }}\r\n                      type=\"line\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n                <div className=\"flex space-x-6\">\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"text-md font-medium leading-6 text-gray-900 mb-4\">\r\n                      Total People Fully Vaccinated\r\n                    </div>\r\n\r\n                    <Line\r\n                      data={{\r\n                        labels: chartData?.totalPeopleFullyVaccinated.map(\r\n                          (v) => v[1]\r\n                        ),\r\n                        datasets: [\r\n                          {\r\n                            label: \"Total People Fully Vaccinated\",\r\n                            data: chartData?.totalPeopleFullyVaccinated.map(\r\n                              (v) => v[2]\r\n                            ),\r\n                            fill: false,\r\n                            backgroundColor: \"#2171B5\",\r\n                            borderColor: \"#2171B5\",\r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                beginAtZero: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      }}\r\n                      type=\"line\"\r\n                    />\r\n                  </div>\r\n                  <div className=\"flex-1\">\r\n                    <div className=\"text-md font-medium leading-6 text-gray-900 mb-4\">\r\n                      Share People Fully Vaccinated In %\r\n                    </div>\r\n                    <Line\r\n                      data={{\r\n                        labels: chartData?.sharePeopleFullyVaccinated.map(\r\n                          (v) => v[1]\r\n                        ),\r\n                        datasets: [\r\n                          {\r\n                            label: \"Share People Fully Vaccinated In Percent\",\r\n                            data: chartData?.sharePeopleFullyVaccinated.map(\r\n                              (v) => v[2]\r\n                            ),\r\n                            fill: false,\r\n                            backgroundColor: \"#2171B5\",\r\n                            borderColor: \"#2171B5\",\r\n                          },\r\n                        ],\r\n                      }}\r\n                      options={{\r\n                        scales: {\r\n                          yAxes: [\r\n                            {\r\n                              ticks: {\r\n                                beginAtZero: true,\r\n                              },\r\n                            },\r\n                          ],\r\n                        },\r\n                      }}\r\n                      type=\"line\"\r\n                    />\r\n                  </div>\r\n                </div>\r\n              </>\r\n            ) : (\r\n              <div className=\"h-10 flex justify-center items-center\">\r\n                <HashLoader color=\"rgb(30, 64, 175)\" size={12} />\r\n              </div>\r\n            )}\r\n          </div>\r\n        }\r\n        buttons={[{ text: \"OK\" }]}\r\n        onClose={() => {\r\n          setModalContent(undefined);\r\n        }}\r\n      />\r\n      <div className=\"absolute top-4 right-4 z-10\">\r\n        <div\r\n          className={`p-4 pl-6 rounded bg-white shadow  w-60 transition mb-4`}\r\n        >\r\n          <span className=\"font-bold uppercase tracking-widest text-xs text-blue-600\">\r\n            Legend\r\n          </span>\r\n\r\n          {(selectedOptions.share ? legendShare : legendTotal).map((v) => {\r\n            return (\r\n              <div className=\"flex mt-2 items-center\">\r\n                <div\r\n                  className=\"h-4 w-6 rounded overflow-hidden mr-2\"\r\n                  style={{ backgroundColor: \"#F4F4F2\" }}\r\n                >\r\n                  {\" \"}\r\n                  <div\r\n                    className=\"h-full w-full\"\r\n                    style={{ backgroundColor: v[1], opacity: 0.5 }}\r\n                  />\r\n                </div>\r\n\r\n                <div>\r\n                  ≥ {numberWithCommas(v[0].toString())}{\" \"}\r\n                  {selectedOptions.share ? \"%\" : null}\r\n                </div>\r\n              </div>\r\n            );\r\n          })}\r\n        </div>\r\n\r\n        <div\r\n          className={`p-4 pl-6 rounded bg-white shadow  w-60 transition ${\r\n            !state ? \"opacity-0\" : \"opacity-100\"\r\n          }`}\r\n        >\r\n          <span className=\"font-bold uppercase tracking-widest text-xs text-gray-400\">\r\n            State Name\r\n          </span>\r\n          <div className=\"text-lg font-bold flex-1 mb-2\">{state?.name}</div>\r\n          <div className=\"font-bold uppercase tracking-widest text-xs text-gray-400\">\r\n            {selectedOptions.title}\r\n          </div>\r\n          <div className=\"font-medium mt-px uppercase text-xs text-gray-400\">\r\n            Per {moment(currentDate).format(\"DD MMMM YYYY\")}\r\n          </div>\r\n          <div className=\"text-lg font-bold flex-1\">\r\n            {!selectedOptions.share\r\n              ? numberWithCommas(state?.totalVaccination?.toString() ?? \"\")\r\n              : `${state?.totalVaccination}%`}\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      <div ref={mapContainer} className=\"w-full flex-1\" />\r\n      <div className=\"bg-white shadow flex h-20\">\r\n        <div className=\"flex-1 py-6 pl-6 pr-2 flex items-center\">\r\n          <Slider\r\n            step={1}\r\n            defaultValue={0}\r\n            min={diffDate}\r\n            max={0}\r\n            onChange={(v) => {\r\n              setCurrentDate(\r\n                moment(todayDate).add(v, \"days\").format(\"YYYY-MM-DD\")\r\n              );\r\n            }}\r\n          />\r\n        </div>\r\n        <div className=\"w-32 flex items-center justify-center py-6 \">\r\n          {moment(currentDate).format(\"DD MMMM YYYY\")}\r\n        </div>\r\n        <div className=\"w-px bg-gray-200\" />\r\n        <Popover className=\"relative\">\r\n          {(open) => (\r\n            <>\r\n              <Popover.Button className=\"focus:outline-none h-full\">\r\n                <div className=\"h-full\">\r\n                  <div className=\"w-72 flex flex-col justify-center items-start font-bold text-blue-600 py-4 pl-4 pr-2 h-full hover:bg-blueGray-100 transition cursor-pointer\">\r\n                    <div className=\"flex items-center\">\r\n                      {selectedOptions.title}\r\n                      <i\r\n                        className={`fas fa-chevron-down text-xs transition duration-200 transform ml-4 ${\r\n                          open ? \"rotate-180\" : \"\"\r\n                        }`}\r\n                      />\r\n                    </div>\r\n                    {selectedOptions.share ? (\r\n                      <div className=\"text-xs text-gray-400\">Per 100</div>\r\n                    ) : null}\r\n                  </div>\r\n                </div>\r\n              </Popover.Button>\r\n              <Popover.Overlay\r\n                className={`${\r\n                  open ? \"opacity-30 fixed inset-0\" : \"opacity-0 \"\r\n                } bg-black z-40`}\r\n              />\r\n              <Transition\r\n                as={React.Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <Popover.Panel className=\"absolute z-50 w-80 px-4 mb-2 transform bottom-20 right-2 sm:px-0 lg:max-w-3xl\">\r\n                  <div className=\"overflow-hidden rounded-lg shadow-lg ring-1 ring-black ring-opacity-5 bg-white \">\r\n                    {options.map((v) => (\r\n                      <div\r\n                        onClick={() => setSelectedOption(v)}\r\n                        className=\"flex flex-col items-start w-full cursor-pointer p-4 transition duration-150 ease-in-out rounded-md hover:bg-gray-100 focus:outline-none focus-visible:ring focus-visible:ring-orange-500 focus-visible:ring-opacity-50\"\r\n                      >\r\n                        <Popover.Button className=\"focus:outline-none\">\r\n                          <span className=\"flex flex-col justify-center items-start\">\r\n                            <div className=\"text-sm font-medium text-gray-900\">\r\n                              {v.title}\r\n                            </div>\r\n                            {v.share ? (\r\n                              <div className=\"text-xs text-gray-400\">\r\n                                Per 100\r\n                              </div>\r\n                            ) : null}\r\n                          </span>\r\n                        </Popover.Button>\r\n                      </div>\r\n                    ))}\r\n                  </div>\r\n                </Popover.Panel>\r\n              </Transition>\r\n            </>\r\n          )}\r\n        </Popover>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MapPage;\r\n","import { Popover, Transition } from \"@headlessui/react\";\r\nimport React from \"react\";\r\n\r\nexport const Layout: React.FC<{}> = ({ children }) => {\r\n  return (\r\n    <div className=\"w-screen h-screen\">\r\n      <div className=\"p-4 pl-6 rounded bg-white shadow absolute top-4 left-4 z-40 flex\">\r\n        <div className=\"text-lg font-bold flex-1\">Project GIS</div>\r\n        <Popover className=\"relative\">\r\n          {({ open }) => (\r\n            <>\r\n              <Popover.Button\r\n                className={`\r\n                ${open ? \"\" : \"text-opacity-90\"}\r\n                ml-8 flex justify-center items-center cursor-pointer text-blue-400 hover:text-blue-600 transition focus:outline-none`}\r\n              >\r\n                <div className=\"\">\r\n                  <i className=\"fas fa-info-circle text-lg \" />\r\n                </div>\r\n              </Popover.Button>\r\n\r\n              <Transition\r\n                as={React.Fragment}\r\n                enter=\"transition ease-out duration-200\"\r\n                enterFrom=\"opacity-0 translate-y-1\"\r\n                enterTo=\"opacity-100 translate-y-0\"\r\n                leave=\"transition ease-in duration-150\"\r\n                leaveFrom=\"opacity-100 translate-y-0\"\r\n                leaveTo=\"opacity-0 translate-y-1\"\r\n              >\r\n                <Popover.Panel className=\"absolute z-10 w-screen max-w-xs px-4 mt-6 transform -translate-x-2.5 -left-28 sm:px-0\">\r\n                  <div className=\"overflow-hidden rounded shadow-lg ring-1 ring-black ring-opacity-5\">\r\n                    <div className=\"p-6 bg-white\">\r\n                      <span className=\"flex items-center mb-2\">\r\n                        <span className=\"font-bold uppercase tracking-widest text-xs text-blue-600\">\r\n                          Kelompok\r\n                        </span>\r\n                      </span>\r\n                      <div className=\"flex\">\r\n                        <span className=\"block text-sm text-gray-500 flex-1\">\r\n                          Dea Niar M.\r\n                        </span>\r\n                        <span className=\"block text-sm text-gray-500\">\r\n                          2110171037\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex\">\r\n                        <span className=\"block text-sm text-gray-500 flex-1\">\r\n                          Risky Alamsyah L.\r\n                        </span>\r\n                        <span className=\"block text-sm text-gray-500\">\r\n                          2110171044\r\n                        </span>\r\n                      </div>\r\n                      <div className=\"flex mb-6\">\r\n                        <span className=\"block text-sm text-gray-500 flex-1\">\r\n                          Angga Pradipta K.P.\r\n                        </span>\r\n                        <span className=\"block text-sm text-gray-500\">\r\n                          2110171048\r\n                        </span>\r\n                      </div>\r\n                      <span className=\"flex items-center mb-2\">\r\n                        <span className=\"font-bold uppercase tracking-widest text-xs text-blue-600\">\r\n                          Dataset Sources\r\n                        </span>\r\n                      </span>\r\n                      <span className=\"block text-sm text-blue-500 flex-1\">\r\n                        <a\r\n                          href=\"https://ourworldindata.org/us-states-vaccinations\"\r\n                          target=\"_blank\"\r\n                          rel=\"noreferrer\"\r\n                        >\r\n                          https://ourworldindata.org/us-states-vaccinations\r\n                        </a>\r\n                      </span>\r\n                    </div>\r\n                  </div>\r\n                </Popover.Panel>\r\n              </Transition>\r\n            </>\r\n          )}\r\n        </Popover>\r\n      </div>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { BrowserRouter, Switch, Redirect, Route } from \"react-router-dom\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nimport \"rc-slider/assets/index.css\";\nimport \"@fortawesome/fontawesome-free/css/all.min.css\";\nimport \"./assets/styles/tailwind.css\";\nimport \"./assets/styles/index.css\";\nimport \"./assets/styles/nprogress.css\";\nimport \"react-toastify/dist/ReactToastify.min.css\";\nimport \"mapbox-gl/dist/mapbox-gl.css\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport { ToastContainer, Slide } from \"react-toastify\";\n\nimport { MapPage } from \"./pages/Map\";\nimport Layout from \"./containers/Layout\";\n\nconst contextClass = {\n  success: \"bg-blue-600\",\n  error: \"bg-red-600\",\n  info: \"bg-gray-600\",\n  warning: \"bg-orange-400\",\n  default: \"bg-indigo-600\",\n  dark: \"bg-white-600 font-gray-300\",\n};\n\ndeclare global {\n  /*~ Here, declare things that go in the global namespace, or augment\n   *~ existing declarations in the global namespace\n   */\n  interface Error {\n    response: {\n      data: {\n        message: string;\n      };\n    };\n  }\n}\n\nexport const App = () => {\n  return (\n    <BrowserRouter>\n      <Layout>\n        <Switch>\n          <Route exact path=\"/\" component={MapPage} />\n          <Redirect to=\"/\" />\n        </Switch>\n      </Layout>\n      <ToastContainer\n        transition={Slide}\n        autoClose={2000}\n        position=\"bottom-right\"\n        hideProgressBar\n        toastClassName={(prop) =>\n          contextClass[prop?.type || \"default\"] +\n          \" relative flex p-4 my-4 min-h-10 rounded-md justify-between overflow-hidden cursor-pointer\"\n        }\n      />\n    </BrowserRouter>\n  );\n};\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}